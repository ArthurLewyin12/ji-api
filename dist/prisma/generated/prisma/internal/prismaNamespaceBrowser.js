/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */
import * as runtime from "@prisma/client/runtime/index-browser";
export const Decimal = runtime.Decimal;
export const ModelName = {
    Submission: 'Submission'
};
/**
 * Enums
 */
export const TransactionIsolationLevel = runtime.makeStrictEnum({
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
});
export const SubmissionScalarFieldEnum = {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    nom: 'nom',
    prenoms: 'prenoms',
    age: 'age',
    annee: 'annee',
    email: 'email',
    telephone: 'telephone',
    hobbies: 'hobbies',
    personnalite: 'personnalite',
    specialisationInteresse: 'specialisationInteresse',
    objectifsEtudes: 'objectifsEtudes',
    styleApprentissage: 'styleApprentissage',
    niveauTechnique: 'niveauTechnique',
    participationAsso: 'participationAsso',
    attentesParrainage: 'attentesParrainage',
    genreParrain: 'genreParrain',
    typeRelation: 'typeRelation',
    frequenceContact: 'frequenceContact',
    modeCommunication: 'modeCommunication',
    commentaires: 'commentaires',
    accepteConditions: 'accepteConditions',
    photoPath: 'photoPath'
};
export const SortOrder = {
    asc: 'asc',
    desc: 'desc'
};
export const QueryMode = {
    default: 'default',
    insensitive: 'insensitive'
};
export const NullsOrder = {
    first: 'first',
    last: 'last'
};
